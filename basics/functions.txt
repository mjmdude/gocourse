package main

import "fmt"

func main() {
	//func <name> (parameters list) returnType {
	// 		code blockconst
	// 		return value
	// }
	// Public functions start with Capital letter
	// Private functions start with lowercase letter
	// sum := add(1, 2)
	fmt.Println(add(1, 2)) // arguments are copied into a function
	greet := func() {
		fmt.Println("Hello anon function")
	}
	greet()

	operation := add

	result := operation(3, 5)
	fmt.Println(result)
	// Passing a function as an argument
	result2 := applyOperation(5, 3, add)
	fmt.Println("5 + 3 =", result2)

	//Returning and using a function
	multiplyBy2 := createMultiplier(2)
	fmt.Println("6 * 2 = ", multiplyBy2(6))
}

func add(a, b int) int {
	return a + b
}

// This is a function taht takes a function as an argument
func applyOperation(x int, y int, operation func(int, int) int) int {
	return operation(x, y)
}

// Function that returns a function
func createMultiplier(factor int) func(int) int {
	return func(x int) int {
		return x * factor
	}
}

// closures or function literals do not have a name.
