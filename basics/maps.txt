package main

import (
	"fmt"
	"maps"
)

func main() {
	// var mapVariable map[key]valueType
	// mapVariable = make(map[keyType]valueType)
	// mapVariable := map[keyType]valueType{
	// 	key1: value,
	// 	key2: value,
	// }
	myMap := make(map[string]int)
	fmt.Println(myMap)
	myMap["key1"] = 9
	myMap["code"] = 18
	fmt.Println(myMap)
	fmt.Println(myMap["key1"])
	fmt.Println(myMap["key"]) // no key then you get the 0 value for the value type
	myMap["code"] = 21
	fmt.Println(myMap)
	delete(myMap, "key1")
	fmt.Println(myMap)
	myMap["key1"] = 9
	myMap["key2"] = 10
	myMap["key3"] = 11
	// fmt.Println(myMap)
	// clear(myMap)
	fmt.Println(myMap)

	_, ok := myMap["key1"] // unknownvalue when true means there is a value associated with thekey.  false no value
	if ok {
		fmt.Println("A value exists with key1")
	} else {
		fmt.Println("No value exists with key1")

	}
	// fmt.Println(value)
	fmt.Println("Is it true a value is associated with key1?", ok)

	myMap2 := map[string]int{
		"a": 1,
		"b": 2,
	}
	myMap3 := map[string]int{
		"a": 1,
		"b": 2,
	}
	fmt.Println(myMap2)

	if maps.Equal(myMap3, myMap2) {
		fmt.Println("myMap and myMap2 are equal")
	}

	for _, v := range myMap3 {
		fmt.Println(v)
	}

	var myMap4 map[string]string
	if myMap4 == nil {
		fmt.Println("myMap4 is nil")

	} else {
		fmt.Println("myMap4 is NOT nil")

	}
	val := myMap4["key"]
	fmt.Println(val)

	// myMap4["key"] = "Value"
	// fmt.Println(myMap4)

	myMap4 = make(map[string]string)
	myMap4["key"] = "Value"
	fmt.Println(myMap4)
	fmt.Println("myMap length:", myMap) // The number of keys is the len of a map
	myMap5 := make(map[string]map[string]string)
	myMap5["map1"] = myMap4
	fmt.Println(myMap5)

}
